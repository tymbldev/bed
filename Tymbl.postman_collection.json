{
  "info": {
    "_postman_id": "tymbl-collection-001",
    "name": "Tymbl API Collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Comprehensive Postman collection for Tymbl backend API. All endpoints grouped by controller with detailed request/response examples.\n\nUpdated with comprehensive interview question endpoints\n\nUpdated with processed name generation endpoints\n\nUpdated with processed name generation endpoints\n\nUpdated with designation generation endpoints\n\nUpdated with Company Shortname Generation endpoints\n\nUpdated with Secondary Industry Mapping endpoints\n\nUpdated with Secondary Industry Mapping endpoints\n\nUpdated with ALL AIController endpoints\n\nAdded company cleanup endpoints\n\nAdded company cleanup endpoints",
    "updatedAt": "2025-07-23T17:16:55.873522",
    "updated": "2025-07-23T15:09:00.513255"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    },
    {
      "key": "authToken",
      "value": "{{authToken}}"
    }
  ],
  "item": [
    {
      "name": "Authentication & Registration",
      "description": "Endpoints for authentication & registration",
      "item": [
        {
          "name": "AuthenticationController",
          "description": "Authentication endpoints",
          "item": [
            {
              "name": "GET /api/v1/auth/verify-email",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/verify-email",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "verify-email"
                  ]
                },
                "description": "Auto-generated endpoint from AuthenticationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/auth/login",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login"
                  ]
                },
                "description": "Auto-generated endpoint from AuthenticationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/auth/forgot-password",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/forgot-password",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "forgot-password"
                  ]
                },
                "description": "Auto-generated endpoint from AuthenticationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/auth/reset-password",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/reset-password",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "reset-password"
                  ]
                },
                "description": "Auto-generated endpoint from AuthenticationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/auth/resend-verification",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/resend-verification",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "resend-verification"
                  ]
                },
                "description": "Auto-generated endpoint from AuthenticationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/auth/login/linkedin",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/login/linkedin",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "login",
                    "linkedin"
                  ]
                },
                "description": "Auto-generated endpoint from AuthenticationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "LinkedInAuthController",
          "description": "LinkedIn authentication endpoints",
          "item": [
            {
              "name": "POST /api/v1/auth/linkedin",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/linkedin",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "auth",
                    "linkedin"
                  ]
                },
                "description": "Authenticates a user using their LinkedIn profile data. The frontend should provide the LinkedIn access token obtained from the LinkedIn OAuth flow.",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"accessToken\": \"AQV...\",\n  \"linkedInProfileUrl\": \"https://www.linkedin.com/in/johndoe\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiJ9...\",\n  \"email\": \"user@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"role\": \"USER\",\n  \"emailVerified\": false\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Invalid input or email already registered\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Invalid LinkedIn access token\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "UserResumeController",
          "description": "Resume management endpoints",
          "item": [
            {
              "name": "GET /api/v1/resumes/user",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/resumes/user",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "resumes",
                    "user"
                  ]
                },
                "description": "Auto-generated endpoint from UserResumeController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/resumes/user/latest",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/resumes/user/latest",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "resumes",
                    "user",
                    "latest"
                  ]
                },
                "description": "Auto-generated endpoint from UserResumeController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/resumes/{resumeId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/resumes/{resumeId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "resumes",
                    "{resumeId}"
                  ],
                  "variable": [
                    {
                      "key": "resumeId",
                      "value": "{{resumeId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from UserResumeController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/resumes/download/{uuid}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/resumes/download/{uuid}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "resumes",
                    "download",
                    "{uuid}"
                  ],
                  "variable": [
                    {
                      "key": "uuid",
                      "value": "{{uuid}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from UserResumeController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/resumes/{resumeId}/download",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/resumes/{resumeId}/download",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "resumes",
                    "{resumeId}",
                    "download"
                  ],
                  "variable": [
                    {
                      "key": "resumeId",
                      "value": "{{resumeId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from UserResumeController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/resumes/upload",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/resumes/upload",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "resumes",
                    "upload"
                  ]
                },
                "description": "Auto-generated endpoint from UserResumeController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "PUT /api/v1/resumes/{resumeId}",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/resumes/{resumeId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "resumes",
                    "{resumeId}"
                  ],
                  "variable": [
                    {
                      "key": "resumeId",
                      "value": "{{resumeId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from UserResumeController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "RegistrationController",
          "description": "User registration endpoints",
          "item": [
            {
              "name": "POST /api/v1/registration",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/registration",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "registration"
                  ]
                },
                "description": "Registers a new user with email and password. Only email and password are mandatory.",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"Password123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"role\": \"USER\",\n  \"phoneNumber\": \"+1234567890\",\n  \"company\": \"Example Corp\",\n  \"companyId\": 123,\n  \"designationId\": 1,\n  \"departmentId\": 1,\n  \"cityId\": 1,\n  \"countryId\": 1,\n  \"zipCode\": \"10001\",\n  \"linkedInProfile\": \"https://linkedin.com/in/johndoe\",\n  \"githubProfile\": \"https://github.com/johndoe\",\n  \"portfolioWebsite\": \"https://johndoe.com\",\n  \"resume\": \"base64_encoded_resume\",\n  \"yearsOfExperience\": 5,\n  \"monthsOfExperience\": 6,\n  \"currentSalary\": 100000,\n  \"expectedSalary\": 120000,\n  \"noticePeriod\": 30,\n  \"skillIds\": [1, 2, 3],\n  \"education\": [\n    {\n      \"degree\": \"Bachelor of Science\",\n      \"fieldOfStudy\": \"Computer Science\",\n      \"institution\": \"Example University\",\n      \"startYear\": 2015,\n      \"endYear\": 2019\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiJ9...\",\n  \"email\": \"user@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"role\": \"USER\",\n  \"emailVerified\": false\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Email already registered\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "UserController",
          "description": "User management endpoints",
          "item": [
            {
              "name": "GET /api/v1/users/profile",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/users/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "users",
                    "profile"
                  ]
                },
                "description": "Auto-generated endpoint from UserController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/users/profile/completion",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/users/profile/completion",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "users",
                    "profile",
                    "completion"
                  ]
                },
                "description": "Auto-generated endpoint from UserController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "PUT /api/v1/users/profile",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/users/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "users",
                    "profile"
                  ]
                },
                "description": "Auto-generated endpoint from UserController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"user@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phoneNumber\": \"+1234567890\",\n  \"company\": \"Example Corp\",\n  \"companyId\": 1,\n  \"departmentId\": 1,\n  \"designation\": \"Software Engineer\",\n  \"designationId\": 1,\n  \"cityId\": 1,\n  \"countryId\": 1,\n  \"zipCode\": \"12345\",\n  \"linkedInProfile\": \"https://linkedin.com/in/johndoe\",\n  \"githubProfile\": \"https://github.com/johndoe\",\n  \"portfolioWebsite\": \"https://johndoe.dev\",\n  \"resume\": \"resume_url_here\",\n  \"yearsOfExperience\": 5,\n  \"monthsOfExperience\": 6,\n  \"currentSalary\": 80000,\n  \"currentSalaryCurrencyId\": 1,\n  \"expectedSalary\": 100000,\n  \"expectedSalaryCurrencyId\": 1,\n  \"noticePeriod\": 30,\n  \"skillIds\": [1, 2, 3],\n  \"skillNames\": [\"Java\", \"Spring Boot\", \"React\"],\n  \"education\": [\n    {\n      \"institution\": \"University of Example\",\n      \"degree\": \"Bachelor of Science\",\n      \"fieldOfStudy\": \"Computer Science\",\n      \"startDate\": \"2015-09-01T00:00:00\",\n      \"endDate\": \"2019-05-01T00:00:00\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Dropdowns & Common",
      "description": "Endpoints for dropdowns & common",
      "item": [
        {
          "name": "TestExceptionController",
          "description": "Test endpoints to verify exception handling",
          "item": [
            {
              "name": "GET /api/v1/test-exceptions/bad-request",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/test-exceptions/bad-request",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "test-exceptions",
                    "bad-request"
                  ]
                },
                "description": "Auto-generated endpoint from TestExceptionController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/test-exceptions/not-found",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/test-exceptions/not-found",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "test-exceptions",
                    "not-found"
                  ]
                },
                "description": "Auto-generated endpoint from TestExceptionController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/test-exceptions/company-not-found",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/test-exceptions/company-not-found",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "test-exceptions",
                    "company-not-found"
                  ]
                },
                "description": "Auto-generated endpoint from TestExceptionController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/test-exceptions/runtime-exception",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/test-exceptions/runtime-exception",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "test-exceptions",
                    "runtime-exception"
                  ]
                },
                "description": "Auto-generated endpoint from TestExceptionController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/test-exceptions/illegal-argument",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/test-exceptions/illegal-argument",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "test-exceptions",
                    "illegal-argument"
                  ]
                },
                "description": "Auto-generated endpoint from TestExceptionController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "NotificationController",
          "description": "APIs for managing user notifications",
          "item": [
            {
              "name": "GET /api/v1/notifications/recent/{userId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/notifications/recent/{userId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "notifications",
                    "recent",
                    "{userId}"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from NotificationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/notifications/all/{userId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/notifications/all/{userId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "notifications",
                    "all",
                    "{userId}"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from NotificationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/notifications/unread/{userId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/notifications/unread/{userId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "notifications",
                    "unread",
                    "{userId}"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from NotificationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/notifications/unread-count/{userId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/notifications/unread-count/{userId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "notifications",
                    "unread-count",
                    "{userId}"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from NotificationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/notifications/type/{userId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/notifications/type/{userId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "notifications",
                    "type",
                    "{userId}"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from NotificationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "PUT /api/v1/notifications/mark-read/{notificationId}",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/notifications/mark-read/{notificationId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "notifications",
                    "mark-read",
                    "{notificationId}"
                  ],
                  "variable": [
                    {
                      "key": "notificationId",
                      "value": "{{notificationId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from NotificationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "PUT /api/v1/notifications/mark-all-read/{userId}",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/notifications/mark-all-read/{userId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "notifications",
                    "mark-all-read",
                    "{userId}"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from NotificationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "DELETE /api/v1/notifications/{notificationId}",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/notifications/{notificationId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "notifications",
                    "{notificationId}"
                  ],
                  "variable": [
                    {
                      "key": "notificationId",
                      "value": "{{notificationId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from NotificationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "DropdownController",
          "description": "APIs for managing dropdown data like departments, locations, designations, industries, currencies, and companies",
          "item": [
            {
              "name": "GET /api/v1/dropdowns/departments",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/departments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "departments"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/locations",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/locations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "locations"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/designations",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/designations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "designations"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/dropdowns/departments",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/departments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "departments"
                  ]
                },
                "description": "Create a new department",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Engineering\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"id\": 1,\n  \"name\": \"Engineering\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Invalid input\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/dropdowns/locations",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/locations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "locations"
                  ]
                },
                "description": "Create a new location",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"cityId\": 1,\n  \"countryId\": 1,\n  \"zipCode\": \"10001\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"id\": 1,\n  \"cityId\": 1,\n  \"countryId\": 1,\n  \"zipCode\": \"10001\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Invalid input\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/dropdowns/designations",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/designations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "designations"
                  ]
                },
                "description": "Create a new designation",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Senior Software Engineer\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"id\": 1,\n  \"name\": \"Senior Software Engineer\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Invalid input\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/dropdowns/industries",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/industries",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "industries"
                  ]
                },
                "description": "Create a new industry",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Technology\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"id\": 1,\n  \"name\": \"Technology\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Invalid input\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/industries",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/industries",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "industries"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/industries-map",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/industries-map",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "industries-map"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/designations-map",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/designations-map",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "designations-map"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/degrees",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/degrees",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "degrees"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/currencies",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/currencies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "currencies"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/currencies/{id}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/currencies/{id}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "currencies",
                    "{id}"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "{{id}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/currencies/code/{code}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/currencies/code/{code}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "currencies",
                    "code",
                    "{code}"
                  ],
                  "variable": [
                    {
                      "key": "code",
                      "value": "{{code}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/companies",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/companies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "companies"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/companies-map",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/companies-map",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "companies-map"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/designations/generate/{departmentId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/designations/generate/{departmentId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "designations",
                    "generate",
                    "{departmentId}"
                  ],
                  "variable": [
                    {
                      "key": "departmentId",
                      "value": "{{departmentId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/designations/generate-all",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/designations/generate-all",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "designations",
                    "generate-all"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/autosuggest",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/autosuggest",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "autosuggest"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/dropdowns/departments",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/departments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "departments"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/dropdowns/locations",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/locations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "locations"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/dropdowns/designations",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/designations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "designations"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/dropdowns/industries",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/industries",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "industries"
                  ]
                },
                "description": "Auto-generated endpoint from DropdownController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/dropdowns/companies/by-industry/:industryId",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/dropdowns/companies/by-industry/:industryId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "dropdowns",
                    "companies",
                    "by-industry",
                    ":industryId"
                  ],
                  "variable": [
                    {
                      "key": "industryId",
                      "value": "1"
                    }
                  ]
                },
                "description": "Get all companies for a specific industry by industryId. Returns a list of companies with detailed attributes."
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "[\n  {\n    \"companyId\": 1,\n    \"companyName\": \"Google\",\n    \"logoUrl\": \"https://logo.com/google.png\",\n    \"website\": \"https://google.com\",\n    \"headquarters\": \"Mountain View, CA\",\n    \"activeJobCount\": 12,\n    \"secondaryIndustry\": \"Cloud, AI\",\n    \"companySize\": \"10000+\",\n    \"specialties\": \"Search, Cloud, AI\",\n    \"careerPageUrl\": \"https://careers.google.com\"\n  },\n  {\n    \"companyId\": 2,\n    \"companyName\": \"Microsoft\",\n    \"logoUrl\": \"https://logo.com/microsoft.png\",\n    \"website\": \"https://microsoft.com\",\n    \"headquarters\": \"Redmond, WA\",\n    \"activeJobCount\": 8,\n    \"secondaryIndustry\": \"Cloud, Productivity\",\n    \"companySize\": \"10000+\",\n    \"specialties\": \"Software, Cloud, Productivity\",\n    \"careerPageUrl\": \"https://careers.microsoft.com\"\n  }\n]"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Industry not found\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "HealthController",
          "description": "Application health check endpoints",
          "item": [
            {
              "name": "GET /api/v1/health/liveness",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/health/liveness",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "health",
                    "liveness"
                  ]
                },
                "description": "Auto-generated endpoint from HealthController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/health/readiness",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/health/readiness",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "health",
                    "readiness"
                  ]
                },
                "description": "Auto-generated endpoint from HealthController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/health/state",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/health/state",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "health",
                    "state"
                  ]
                },
                "description": "Auto-generated endpoint from HealthController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "InstitutionController",
          "description": "APIs for managing educational institutions",
          "item": [
            {
              "name": "GET /api/v1/institutions/{id}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/institutions/{id}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "institutions",
                    "{id}"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "{{id}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InstitutionController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/institutions",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/institutions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "institutions"
                  ]
                },
                "description": "Create a new educational institution",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Example University\",\n  \"type\": \"University\",\n  \"country\": \"United States\",\n  \"city\": \"New York\",\n  \"website\": \"https://example.edu\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"id\": 1,\n  \"name\": \"Example University\",\n  \"type\": \"University\",\n  \"country\": \"United States\",\n  \"city\": \"New York\",\n  \"website\": \"https://example.edu\",\n  \"createdAt\": \"2024-01-01T10:00:00\",\n  \"updatedAt\": \"2024-01-01T10:00:00\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Invalid input\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/institutions/search",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/institutions/search",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "institutions",
                    "search"
                  ]
                },
                "description": "Auto-generated endpoint from InstitutionController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "PUT /api/v1/institutions/{id}",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/institutions/{id}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "institutions",
                    "{id}"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "{{id}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InstitutionController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "DELETE /api/v1/institutions/{id}",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/institutions/{id}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "institutions",
                    "{id}"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "{{id}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InstitutionController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "SkillController",
          "description": "Skills suggester endpoints",
          "item": [
            {
              "name": "GET /api/v1/skills",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/skills",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "skills"
                  ]
                },
                "description": "Returns a list of all available skills sorted by usage count (descending) and name (ascending). Results are cached for better performance."
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "[\n  {\n    \"id\": 1,\n    \"name\": \"Java\",\n    \"usageCount\": 1000,\n    \"category\": \"Programming Language\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Spring Boot\",\n    \"usageCount\": 800,\n    \"category\": \"Framework\"\n  },\n  {\n    \"id\": 3,\n    \"name\": \"AWS\",\n    \"usageCount\": 600,\n    \"category\": \"Cloud Platform\"\n  }\n]"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Jobs & Companies",
      "description": "Endpoints for jobs & companies",
      "item": [
        {
          "name": "CompanyController",
          "description": "APIs for managing companies",
          "item": [
            {
              "name": "GET /api/v1/companies/{id}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/companies/{id}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "companies",
                    "{id}"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "{{id}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from CompanyController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/companies/industry-wise-companies",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/companies/industry-wise-companies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "companies",
                    "industry-wise-companies"
                  ]
                },
                "description": "Auto-generated endpoint from CompanyController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/companies",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/companies",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "companies"
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Example Corp\",\n  \"description\": \"A technology company\",\n  \"website\": \"https://example.com\",\n  \"logoUrl\": \"https://example.com/logo.png\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "description": "Create or update a company."
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"id\": 1,\n  \"name\": \"Example Corp\",\n  \"description\": \"A technology company\",\n  \"website\": \"https://example.com\",\n  \"logoUrl\": \"https://example.com/logo.png\",\n  \"createdAt\": \"2024-01-01T10:00:00\",\n  \"updatedAt\": \"2024-01-01T10:00:00\",\n  \"aboutUs\": \"About Example Corp\",\n  \"vision\": \"To innovate\",\n  \"mission\": \"Empower developers\",\n  \"culture\": \"Open and inclusive\",\n  \"jobs\": [],\n  \"careerPageUrl\": \"https://example.com/careers\",\n  \"linkedinUrl\": \"https://linkedin.com/company/example-corp\",\n  \"headquarters\": \"San Francisco, CA\",\n  \"primaryIndustryId\": 10,\n  \"secondaryIndustries\": \"Software,Cloud\",\n  \"companySize\": \"1000+\",\n  \"specialties\": \"AI,ML,Cloud\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/companies/{id}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/companies/1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "companies",
                    "1"
                  ]
                },
                "description": "Get company by ID."
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"id\": 1,\n  \"name\": \"Example Corp\",\n  \"description\": \"A technology company\",\n  \"website\": \"https://example.com\",\n  \"logoUrl\": \"https://example.com/logo.png\",\n  \"createdAt\": \"2024-01-01T10:00:00\",\n  \"updatedAt\": \"2024-01-01T10:00:00\",\n  \"aboutUs\": \"About Example Corp\",\n  \"vision\": \"To innovate\",\n  \"mission\": \"Empower developers\",\n  \"culture\": \"Open and inclusive\",\n  \"jobs\": [],\n  \"careerPageUrl\": \"https://example.com/careers\",\n  \"linkedinUrl\": \"https://linkedin.com/company/example-corp\",\n  \"headquarters\": \"San Francisco, CA\",\n  \"primaryIndustryId\": 10,\n  \"secondaryIndustries\": \"Software,Cloud\",\n  \"companySize\": \"1000+\",\n  \"specialties\": \"AI,ML,Cloud\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/companies",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/companies?page=0&size=100",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "companies"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "100"
                    }
                  ]
                },
                "description": "Get all companies (paginated)."
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"content\": [ /* CompanyResponse[] */ ],\n  \"pageable\": { /* ... */ },\n  \"totalElements\": 1,\n  \"totalPages\": 1,\n  \"last\": true,\n  \"size\": 100,\n  \"number\": 0,\n  \"sort\": { /* ... */ },\n  \"first\": true,\n  \"numberOfElements\": 1,\n  \"empty\": false\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/companies/by-industry/{primaryIndustryId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/companies/by-industry/{primaryIndustryId}?page=0&size=100",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "companies",
                    "by-industry",
                    "{primaryIndustryId}"
                  ],
                  "variable": [
                    {
                      "key": "primaryIndustryId",
                      "value": "1"
                    }
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "100"
                    }
                  ]
                },
                "description": "Get companies by primary industry ID with pagination support. Default page size is 100."
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"content\": [\n    {\n      \"id\": 1,\n      \"name\": \"Google\",\n      \"description\": \"A technology company\",\n      \"website\": \"https://google.com\",\n      \"logoUrl\": \"https://google.com/logo.png\",\n      \"createdAt\": \"2024-01-01T10:00:00\",\n      \"updatedAt\": \"2024-01-01T10:00:00\",\n      \"aboutUs\": \"About Google\",\n      \"vision\": \"To organize the world's information\",\n      \"mission\": \"Make information universally accessible\",\n      \"culture\": \"Innovative and inclusive\",\n      \"jobs\": [],\n      \"careerPageUrl\": \"https://careers.google.com\",\n      \"linkedinUrl\": \"https://linkedin.com/company/google\",\n      \"headquarters\": \"Mountain View, CA\",\n      \"primaryIndustryId\": 1,\n      \"secondaryIndustries\": \"Software,Cloud\",\n      \"companySize\": \"100000+\",\n      \"specialties\": \"AI,ML,Search\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Microsoft\",\n      \"description\": \"A technology company\",\n      \"website\": \"https://microsoft.com\",\n      \"logoUrl\": \"https://microsoft.com/logo.png\",\n      \"createdAt\": \"2024-01-01T10:00:00\",\n      \"updatedAt\": \"2024-01-01T10:00:00\",\n      \"aboutUs\": \"About Microsoft\",\n      \"vision\": \"To empower every person and organization\",\n      \"mission\": \"Empower every person and organization to achieve more\",\n      \"culture\": \"Growth mindset\",\n      \"jobs\": [],\n      \"careerPageUrl\": \"https://careers.microsoft.com\",\n      \"linkedinUrl\": \"https://linkedin.com/company/microsoft\",\n      \"headquarters\": \"Redmond, WA\",\n      \"primaryIndustryId\": 1,\n      \"secondaryIndustries\": \"Software,Cloud\",\n      \"companySize\": \"100000+\",\n      \"specialties\": \"Windows,Office,Azure\"\n    }\n  ],\n  \"pageable\": {\n    \"sort\": {\n      \"empty\": false,\n      \"sorted\": true,\n      \"unsorted\": false\n    },\n    \"offset\": 0,\n    \"pageNumber\": 0,\n    \"pageSize\": 100,\n    \"paged\": true,\n    \"unpaged\": false\n  },\n  \"last\": false,\n  \"totalElements\": 25,\n  \"totalPages\": 1,\n  \"size\": 100,\n  \"number\": 0,\n  \"sort\": {\n    \"empty\": false,\n    \"sorted\": true,\n    \"unsorted\": false\n  },\n  \"first\": true,\n  \"numberOfElements\": 25,\n  \"empty\": false\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"No companies found for industry ID: 1\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "SuperAdminController",
          "description": "Super admin job approval endpoints",
          "item": [
            {
              "name": "GET /api/v1/superadmin/jobs/pending",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/superadmin/jobs/pending",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "superadmin",
                    "jobs",
                    "pending"
                  ]
                },
                "description": "Auto-generated endpoint from SuperAdminController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/superadmin/jobs/approve",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/superadmin/jobs/approve",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "superadmin",
                    "jobs",
                    "approve"
                  ]
                },
                "description": "Auto-generated endpoint from SuperAdminController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "JobManagementController",
          "description": "Job management endpoints that require authentication",
          "item": [
            {
              "name": "POST /api/v1/jobmanagement",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobmanagement",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobmanagement"
                  ]
                },
                "description": "Create a new job posting with the given details. The job posting will be associated with the authenticated user.",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Senior Software Engineer\",\n  \"description\": \"We are looking for a Senior Software Engineer to join our team...\",\n  \"cityId\": 1,\n  \"countryId\": 1,\n  \"designationId\": 1,\n  \"designation\": \"Senior Software Engineer\",\n  \"minSalary\": 80000,\n  \"maxSalary\": 120000,\n  \"minExperience\": 3,\n  \"maxExperience\": 7,\n  \"jobType\": \"HYBRID\",\n  \"currencyId\": 1,\n  \"companyId\": 1,\n  \"company\": \"Example Corp\",\n  \"tags\": [\"Java\", \"Spring Boot\", \"Microservices\"],\n  \"openingCount\": 2,\n  \"uniqueUrl\": \"senior-software-engineer-example-corp\",\n  \"platform\": \"Internal\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"id\": 1,\n  \"title\": \"Senior Software Engineer\",\n  \"description\": \"We are looking for a Senior Software Engineer to join our team...\",\n  \"cityId\": 1,\n  \"countryId\": 1,\n  \"designationId\": 1,\n  \"designation\": \"Senior Software Engineer\",\n  \"minSalary\": 80000,\n  \"maxSalary\": 120000,\n  \"minExperience\": 3,\n  \"maxExperience\": 7,\n  \"jobType\": \"HYBRID\",\n  \"currencyId\": 1,\n  \"companyId\": 1,\n  \"company\": \"Example Corp\",\n  \"tags\": [\"Java\", \"Spring Boot\", \"Microservices\"],\n  \"openingCount\": 2,\n  \"uniqueUrl\": \"senior-software-engineer-example-corp\",\n  \"platform\": \"Internal\",\n  \"active\": true,\n  \"createdAt\": \"2024-01-01T10:00:00\",\n  \"updatedAt\": \"2024-01-01T10:00:00\",\n  \"approved\": 0,\n  \"postedById\": 1\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Invalid request body format\",\n  \"message\": \"Validation failed\",\n  \"field\": \"title\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 403,
                  "name": "Forbidden",
                  "body": "{\n  \"error\": \"Forbidden - Not authorized for this company\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/jobmanagement/my-posts",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobmanagement/my-posts",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobmanagement",
                    "my-posts"
                  ]
                },
                "description": "Auto-generated endpoint from JobManagementController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/jobmanagement/company/{companyId}/super-admin-jobs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobmanagement/company/{companyId}/super-admin-jobs",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobmanagement",
                    "company",
                    "{companyId}",
                    "super-admin-jobs"
                  ],
                  "variable": [
                    {
                      "key": "companyId",
                      "value": "{{companyId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from JobManagementController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/jobmanagement/{jobId}/details",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobmanagement/{jobId}/details",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobmanagement",
                    "{jobId}",
                    "details"
                  ],
                  "variable": [
                    {
                      "key": "jobId",
                      "value": "{{jobId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from JobManagementController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/jobmanagement/register-referrer",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobmanagement/register-referrer",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobmanagement",
                    "register-referrer"
                  ]
                },
                "description": "Register yourself as a referrer for a job from your company. You can only register for jobs from the same company as yours.",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"jobId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/jobmanagement/accept/{applicationId}",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobmanagement/accept/{applicationId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobmanagement",
                    "accept",
                    "{applicationId}"
                  ],
                  "variable": [
                    {
                      "key": "applicationId",
                      "value": "{{applicationId}}"
                    }
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "SHORTLISTED",
                      "description": "Application status (SHORTLISTED or REJECTED)"
                    }
                  ]
                },
                "description": "Allows the job poster or any user from the same company to accept a referral application and set its status to SHORTLISTED or REJECTED."
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Referral application status updated successfully\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Invalid input or not allowed\",\n  \"message\": \"Status must be either SHORTLISTED or REJECTED\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 403,
                  "name": "Forbidden",
                  "body": "{\n  \"error\": \"Forbidden - Not authorized\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "PUT /api/v1/jobmanagement/{jobId}",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobmanagement/{jobId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobmanagement",
                    "{jobId}"
                  ],
                  "variable": [
                    {
                      "key": "jobId",
                      "value": "{{jobId}}"
                    }
                  ]
                },
                "description": "Updates an existing job posting with the given details. Only the user who posted the job can update it.",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Updated Senior Software Engineer\",\n  \"description\": \"Updated job description for Senior Software Engineer position...\",\n  \"cityId\": 1,\n  \"countryId\": 1,\n  \"designationId\": 1,\n  \"designation\": \"Senior Software Engineer\",\n  \"minSalary\": 85000,\n  \"maxSalary\": 130000,\n  \"minExperience\": 4,\n  \"maxExperience\": 8,\n  \"jobType\": \"ONSITE\",\n  \"currencyId\": 1,\n  \"companyId\": 1,\n  \"company\": \"Example Corp\",\n  \"tags\": [\"Java\", \"Spring Boot\", \"Microservices\", \"AWS\"],\n  \"openingCount\": 3,\n  \"uniqueUrl\": \"updated-senior-software-engineer-example-corp\",\n  \"platform\": \"Internal\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"id\": 1,\n  \"title\": \"Updated Senior Software Engineer\",\n  \"description\": \"Updated job description for Senior Software Engineer position...\",\n  \"cityId\": 1,\n  \"countryId\": 1,\n  \"designationId\": 1,\n  \"designation\": \"Senior Software Engineer\",\n  \"minSalary\": 85000,\n  \"maxSalary\": 130000,\n  \"minExperience\": 4,\n  \"maxExperience\": 8,\n  \"jobType\": \"ONSITE\",\n  \"currencyId\": 1,\n  \"companyId\": 1,\n  \"company\": \"Example Corp\",\n  \"tags\": [\"Java\", \"Spring Boot\", \"Microservices\", \"AWS\"],\n  \"openingCount\": 3,\n  \"uniqueUrl\": \"updated-senior-software-engineer-example-corp\",\n  \"platform\": \"Internal\",\n  \"active\": true,\n  \"createdAt\": \"2024-01-01T10:00:00\",\n  \"updatedAt\": \"2024-01-01T11:00:00\",\n  \"approved\": 0,\n  \"postedById\": 1\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Invalid request body format\",\n  \"message\": \"Validation failed\",\n  \"field\": \"title\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 403,
                  "name": "Forbidden",
                  "body": "{\n  \"error\": \"Forbidden - Not the job owner\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Job posting not found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "DELETE /api/v1/jobmanagement/{jobId}",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobmanagement/{jobId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobmanagement",
                    "{jobId}"
                  ],
                  "variable": [
                    {
                      "key": "jobId",
                      "value": "{{jobId}}"
                    }
                  ]
                },
                "description": "Deactivates a job posting with the specified ID. Only the user who posted the job can delete it."
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Job posting deleted successfully\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 403,
                  "name": "Forbidden",
                  "body": "{\n  \"error\": \"Forbidden - Not the job owner\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Job posting not found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "JobApplicationsManagementController",
          "description": "Endpoints for managing job applications received for jobs posted by the current user",
          "item": [
            {
              "name": "GET /api/v1/job-applications/my-jobs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/job-applications/my-jobs",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "job-applications",
                    "my-jobs"
                  ]
                },
                "description": "Auto-generated endpoint from JobApplicationsManagementController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/job-applications/job/{jobId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/job-applications/job/{jobId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "job-applications",
                    "job",
                    "{jobId}"
                  ],
                  "variable": [
                    {
                      "key": "jobId",
                      "value": "{{jobId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from JobApplicationsManagementController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/job-applications/{applicationId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/job-applications/{applicationId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "job-applications",
                    "{applicationId}"
                  ],
                  "variable": [
                    {
                      "key": "applicationId",
                      "value": "{{applicationId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from JobApplicationsManagementController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/job-applications/{jobId}/referrer-action",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/job-applications/{jobId}/referrer-action",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "job-applications",
                    "{jobId}",
                    "referrer-action"
                  ],
                  "variable": [
                    {
                      "key": "jobId",
                      "value": "{{jobId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from JobApplicationsManagementController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "JobSearchController",
          "description": "Job search and retrieval endpoints",
          "item": [
            {
              "name": "GET /api/v1/jobsearch/{jobId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobsearch/{jobId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobsearch",
                    "{jobId}"
                  ],
                  "variable": [
                    {
                      "key": "jobId",
                      "value": "{{jobId}}"
                    }
                  ]
                },
                "description": "Get job posting details by ID"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"id\": 1,\n  \"title\": \"Senior Software Engineer\",\n  \"description\": \"We are looking for a talented Senior Software Engineer...\",\n  \"cityId\": 1,\n  \"countryId\": 1,\n  \"designationId\": 1,\n  \"designation\": \"Senior Software Engineer\",\n  \"minSalary\": 100000,\n  \"maxSalary\": 150000,\n  \"minExperience\": 3,\n  \"maxExperience\": 7,\n  \"jobType\": \"HYBRID\",\n  \"currencyId\": 1,\n  \"companyId\": 1,\n  \"company\": \"Google\",\n  \"postedBy\": 1,\n  \"active\": true,\n  \"createdAt\": \"2024-01-15T10:00:00\",\n  \"updatedAt\": \"2024-01-15T10:00:00\",\n  \"tags\": [\"Java\", \"Spring Boot\", \"Microservices\"],\n  \"isSuperAdminPosted\": false,\n  \"openingCount\": 1,\n  \"uniqueUrl\": \"google-senior-software-engineer-2024\",\n  \"platform\": \"LinkedIn\",\n  \"approved\": 1,\n  \"referrerCount\": 2,\n  \"userRole\": \"VIEWER\",\n  \"actualPostedBy\": 1\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/jobsearch/search",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobsearch/search",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobsearch",
                    "search"
                  ]
                },
                "description": "Unified search endpoint that searches jobs using Elasticsearch. \nSupports keyword search, location filtering, experience filtering, company, designation, and pagination.\n\nRequest Body Fields:\n- keywords: List of search keywords (optional)\n- cityId: Filter by city ID (optional)\n- countryId: Filter by country ID (optional)\n- companyId: Filter by company ID (optional)\n- designationId: Filter by designation ID (optional)\n- minExperience: Minimum experience in years (optional)\n- maxExperience: Maximum experience in years (optional)\n- page: Page number (default: 0)\n- size: Page size (default: 20)\n\nResponse includes:\n- jobs: Array of job objects with full details\n- total: Total number of matching jobs\n- page: Current page number\n- size: Page size\n- totalPages: Total number of pages",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"keywords\": [\"java\", \"spring\"],\n  \"cityId\": 1,\n  \"countryId\": 1,\n  \"companyId\": 1,\n  \"designationId\": 1,\n  \"minExperience\": 2,\n  \"maxExperience\": 5,\n  \"page\": 0,\n  \"size\": 20\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"jobs\": [\n    {\n      \"id\": 1,\n      \"title\": \"Senior Software Engineer\",\n      \"description\": \"We are looking for a talented Senior Software Engineer...\",\n      \"cityId\": 1,\n      \"countryId\": 1,\n      \"designationId\": 1,\n      \"designation\": \"Senior Software Engineer\",\n      \"minSalary\": 100000,\n      \"maxSalary\": 150000,\n      \"minExperience\": 3,\n      \"maxExperience\": 7,\n      \"jobType\": \"HYBRID\",\n      \"currencyId\": 1,\n      \"companyId\": 1,\n      \"company\": \"Google\",\n      \"postedBy\": 1,\n      \"active\": true,\n      \"createdAt\": \"2024-01-15T10:00:00\",\n      \"updatedAt\": \"2024-01-15T10:00:00\",\n      \"tags\": [\"Java\", \"Spring Boot\", \"Microservices\"],\n      \"isSuperAdminPosted\": false,\n      \"openingCount\": 1,\n      \"uniqueUrl\": \"google-senior-software-engineer-2024\",\n      \"platform\": \"LinkedIn\",\n      \"approved\": 1,\n      \"referrerCount\": 2,\n      \"userRole\": \"VIEWER\",\n      \"actualPostedBy\": 1\n    }\n  ],\n  \"total\": 1,\n  \"page\": 0,\n  \"size\": 20,\n  \"totalPages\": 1\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\",\n  \"message\": \"Invalid search parameters\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Authentication required\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Internal Server Error\",\n  \"message\": \"An error occurred during search\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/jobsearch/{jobId}/referrers",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/jobsearch/{jobId}/referrers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "jobsearch",
                    "{jobId}",
                    "referrers"
                  ],
                  "variable": [
                    {
                      "key": "jobId",
                      "value": "{{jobId}}"
                    }
                  ]
                },
                "description": "Returns a list of all referrers for the specified job, sorted by overall score."
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "[\n  {\n    \"userId\": 123,\n    \"userName\": \"Alice Smith\",\n    \"designation\": \"Senior Engineer\",\n    \"numApplicationsAccepted\": 5,\n    \"feedbackScore\": 4.5,\n    \"overallScore\": 7.2\n  },\n  {\n    \"userId\": 456,\n    \"userName\": \"Bob Lee\",\n    \"designation\": \"Manager\",\n    \"numApplicationsAccepted\": 2,\n    \"feedbackScore\": 4.0,\n    \"overallScore\": 6.1\n  }\n]"
                }
              ]
            }
          ]
        },
        {
          "name": "MyJobApplicationsController",
          "description": "Endpoints for managing job applications made by the current user",
          "item": [
            {
              "name": "POST /api/v1/my-applications/feedback",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/my-applications/feedback",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "my-applications",
                    "feedback"
                  ]
                },
                "description": "Auto-generated endpoint from MyJobApplicationsController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/my-applications/switch-referrer",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/my-applications/switch-referrer",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "my-applications",
                    "switch-referrer"
                  ]
                },
                "description": "Auto-generated endpoint from MyJobApplicationsController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "AI & Utilities",
      "description": "Endpoints for ai & utilities",
      "item": [
        {
          "name": "UtilityController",
          "description": "Internal/utility endpoints for admin/data operations (non-AI)",
          "item": [
            {
              "name": "POST /api/v1/utility/company-data/load-basic",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/utility/company-data/load-basic",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "utility",
                    "company-data",
                    "load-basic"
                  ]
                },
                "description": "Auto-generated endpoint from UtilityController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/utility/company-data/update-detailed",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/utility/company-data/update-detailed",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "utility",
                    "company-data",
                    "update-detailed"
                  ]
                },
                "description": "Auto-generated endpoint from UtilityController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/utility/company-data/cleanup-duplicates",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/utility/company-data/cleanup-duplicates",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "utility",
                    "company-data",
                    "cleanup-duplicates"
                  ]
                },
                "description": "Auto-generated endpoint from UtilityController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/utility/job-admin/reindex",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/utility/job-admin/reindex",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "utility",
                    "job-admin",
                    "reindex"
                  ]
                },
                "description": "Auto-generated endpoint from UtilityController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "AI Services",
          "description": "Comprehensive AI-powered data generation and enrichment utilities",
          "item": [
            {
              "name": "Company Management",
              "description": "AI-powered company data generation, crawling, and content management",
              "item": [
                {
                  "name": "POST /api/v1/ai/companies/generate-batch",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/companies/generate-batch",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "companies",
                        "generate-batch"
                      ]
                    },
                    "description": "Generate and save companies using Gemini in batches of 500, checking for duplicates and saving new ones. Repeats for 100 iterations. Returns a summary of results."
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"total_batches\": 100,\n  \"total_companies_processed\": 50000,\n  \"companies_generated\": 1200,\n  \"companies_skipped\": 48800,\n  \"errors\": [],\n  \"message\": \"Company batch generation completed\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/companies/crawl",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/companies/crawl",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "companies",
                        "crawl"
                      ]
                    },
                    "description": "Crawl all companies from the companies.txt file"
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"message\": \"Company crawling process completed successfully\",\n  \"status\": \"SUCCESS\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/companies/{companyId}/jobs/crawl",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/companies/{{companyId}}/jobs/crawl",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "companies",
                        "{{companyId}}",
                        "jobs",
                        "crawl"
                      ],
                      "variable": [
                        {
                          "key": "companyId",
                          "value": "1"
                        }
                      ]
                    },
                    "description": "Crawl jobs for a specific company by ID"
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"message\": \"Job crawling process started successfully for company ID: 1\",\n  \"companyId\": 1,\n  \"status\": \"SUCCESS\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/companies/{companyName}/jobs/crawl-by-name",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/companies/{{companyName}}/jobs/crawl-by-name",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "companies",
                        "{{companyName}}",
                        "jobs",
                        "crawl-by-name"
                      ],
                      "variable": [
                        {
                          "key": "companyName",
                          "value": "Google"
                        }
                      ]
                    },
                    "description": "Crawl jobs for a company by name"
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"message\": \"Job crawling process started successfully for company: Google\",\n  \"companyName\": \"Google\",\n  \"status\": \"SUCCESS\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/companies/{companyId}/shorten-content",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/companies/{{companyId}}/shorten-content",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "companies",
                        "{{companyId}}",
                        "shorten-content"
                      ],
                      "variable": [
                        {
                          "key": "companyId",
                          "value": "1"
                        }
                      ]
                    },
                    "description": "Shorten company about us and culture content using AI. Takes the original about us and culture content from a company, uses Gemini AI to shorten them to 5 key points each with proper hyphen formatting, and saves the shortened versions to the aboutUs and culture fields."
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"companyId\": 1,\n  \"companyName\": \"Google\",\n  \"aboutUsShortened\": true,\n  \"cultureShortened\": true,\n  \"message\": \"Content shortened and saved successfully\"\n}"
                    },
                    {
                      "code": 404,
                      "name": "Company not found",
                      "body": "{\n  \"error\": \"Company not found with ID: 1\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Error shortening content: Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/companies/shorten-content-all",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/companies/shorten-content-all",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "companies",
                        "shorten-content-all"
                      ]
                    },
                    "description": "Shorten about us and culture content for all unprocessed companies using AI. Loops through all companies that haven't been processed for content shortening, takes their original about us and culture content, uses Gemini AI to shorten them to 5 key points each with proper hyphen formatting, and saves the shortened versions to the aboutUs and culture fields."
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"total_companies_processed\": 50,\n  \"total_about_us_shortened\": 45,\n  \"total_culture_shortened\": 42,\n  \"total_errors\": 3,\n  \"company_results\": [\n    {\n      \"companyId\": 1,\n      \"companyName\": \"Google\",\n      \"aboutUsShortened\": true,\n      \"cultureShortened\": true,\n      \"message\": \"Content shortened and saved successfully\"\n    }\n  ],\n  \"message\": \"Content shortening completed for all companies\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Error shortening content for all companies: Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/companies/generate-similar",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/companies/generate-similar",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "companies",
                        "generate-similar"
                      ]
                    },
                    "description": "Generate similar companies for all unprocessed companies. Loops through all companies that haven't been processed for similar company generation and have industry info, uses AI to find similar companies that a person can switch to based on industry, company size, business model, etc., creates new companies if they don't exist, and stores the results in the company table."
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"total_companies_processed\": 50,\n  \"total_similar_companies_found\": 400,\n  \"total_new_companies_created\": 25,\n  \"total_errors\": 2,\n  \"company_results\": [\n    {\n      \"companyId\": 1,\n      \"companyName\": \"Google\",\n      \"success\": true,\n      \"similarCompaniesFound\": 8,\n      \"newCompaniesCreated\": 2,\n      \"similarCompanyNames\": [\"Microsoft\", \"Amazon\", \"Apple\"],\n      \"newCompanyNames\": [\"OpenAI\", \"Anthropic\"],\n      \"existingCompanyNames\": [\"Microsoft\", \"Amazon\", \"Apple\"],\n      \"industry\": \"Information Technology & Services\"\n    }\n  ],\n  \"message\": \"Similar company generation completed\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Failed to generate similar companies: Server Error\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Industry Management",
              "description": "AI-powered industry detection and management",
              "item": [
                {
                  "name": "POST /api/v1/ai/detect-industries",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/detect-industries",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "detect-industries"
                      ]
                    },
                    "description": "Detect industries for all companies using Gemini AI"
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "[\n  {\n    \"companyId\": 1,\n    \"companyName\": \"Yatra\",\n    \"primaryIndustry\": \"Travel & Hospitality Technology\",\n    \"primaryIndustryId\": 15,\n    \"secondaryIndustries\": [\"OTA\", \"Travel Tech\", \"Product Based Company\"],\n    \"processed\": true,\n    \"error\": null\n  }\n]"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Skill Management",
              "description": "AI-powered skill generation and management",
              "item": [
                {
                  "name": "POST /api/v1/ai/skills/generate-and-save",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/skills/generate-and-save",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "skills",
                        "generate-and-save"
                      ]
                    },
                    "description": "Generate and save comprehensive tech skills using AI"
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"new_skills_added\": 10,\n  \"total_skills_generated\": 50,\n  \"added_skills\": [\n    {\"name\": \"Rust\", \"category\": \"Programming Language\", \"description\": \"A fast, safe systems programming language.\"}\n  ]\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/skills/{skillName}/topics/generate-and-save",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/skills/{{skillName}}/topics/generate-and-save",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "skills",
                        "{{skillName}}",
                        "topics",
                        "generate-and-save"
                      ],
                      "variable": [
                        {
                          "key": "skillName",
                          "value": "Java"
                        }
                      ]
                    },
                    "description": "Generate and save topics for a technical skill using Gemini."
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"skill_name\": \"Java\",\n  \"topics_added\": 8,\n  \"topics\": [{\"topic\": \"Collections\", \"description\": \"Data structures in Java\"}],\n  \"message\": \"Topics generated and saved successfully\"\n}"
                    },
                    {
                      "code": 404,
                      "name": "Skill not found",
                      "body": "{\n  \"error\": \"Skill not found: Java\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/skills/topics/generate-and-save-all",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/skills/topics/generate-and-save-all",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "skills",
                        "topics",
                        "generate-and-save-all"
                      ]
                    },
                    "description": "Generate and save topics for all enabled technical skills using Gemini."
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"total_skills\": 15,\n  \"results\": [\n    {\"skill_name\": \"Java\", \"topics_added\": 8, \"message\": \"Topics generated and saved successfully\"},\n    {\"skill_name\": \"Python\", \"topics_added\": 10, \"message\": \"Topics generated and saved successfully\"}\n  ],\n  \"message\": \"Topics generated and saved for all skills\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Interview Questions",
              "description": "AI-powered interview question generation and management",
              "item": [
                {
                  "name": "POST /api/v1/ai/interview-questions/generate-comprehensive",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/interview-questions/generate-comprehensive",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "interview-questions",
                        "generate-comprehensive"
                      ]
                    },
                    "description": "Generate comprehensive interview questions for all skills in the system using AI"
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"total_skills_processed\": 15,\n  \"total_questions_generated\": 450,\n  \"message\": \"Comprehensive question generation completed\",\n  \"skill_results\": [\n    {\n      \"skill_name\": \"Java\",\n      \"skill_id\": 1,\n      \"questions_generated\": 30,\n      \"mappings_created\": 90,\n      \"status\": \"success\"\n    }\n  ]\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/interview-questions/generate-for-skill/{skillName}",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/interview-questions/generate-for-skill/{{skillName}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "interview-questions",
                        "generate-for-skill",
                        "{{skillName}}"
                      ],
                      "variable": [
                        {
                          "key": "skillName",
                          "value": "Java"
                        }
                      ]
                    },
                    "description": "Generate comprehensive interview questions for a specific skill using AI"
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"skill_name\": \"Java\",\n  \"skill_id\": 1,\n  \"questions_generated\": 30,\n  \"mappings_created\": 90,\n  \"status\": \"success\"\n}"
                    },
                    {
                      "code": 404,
                      "name": "Skill not found",
                      "body": "{\n  \"error\": \"Skill not found: Java\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/skills/{skillName}/topics/{topicName}/questions/generate-and-save",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/skills/{{skillName}}/topics/{{topicName}}/questions/generate-and-save?numQuestions=10",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "skills",
                        "{{skillName}}",
                        "topics",
                        "{{topicName}}",
                        "questions",
                        "generate-and-save"
                      ],
                      "query": [
                        {
                          "key": "numQuestions",
                          "value": "10"
                        }
                      ],
                      "variable": [
                        {
                          "key": "skillName",
                          "value": "Java"
                        },
                        {
                          "key": "topicName",
                          "value": "Collections"
                        }
                      ]
                    },
                    "description": "Generate and save interview questions for a skill and topic using Gemini. Generates summary and detailed questions, and for coding questions, generates code in Java, Python, and C++."
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"skill_name\": \"Java\",\n  \"topic_name\": \"Collections\",\n  \"questions_added\": 10,\n  \"questions\": [{\"question\": \"Explain Java Collections Framework\", \"answer\": \"<div>...</div>\", \"coding\": true, \"javaCode\": \"...\", \"pythonCode\": \"...\", \"cppCode\": \"...\"}],\n  \"message\": \"Questions generated and (optionally) saved successfully\"\n}"
                    },
                    {
                      "code": 404,
                      "name": "Skill or topic not found",
                      "body": "{\n  \"error\": \"Skill or topic not found\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/skills/{skillName}/topics/questions/generate-and-save",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/skills/{{skillName}}/topics/questions/generate-and-save?numQuestions=10",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "skills",
                        "{{skillName}}",
                        "topics",
                        "questions",
                        "generate-and-save"
                      ],
                      "query": [
                        {
                          "key": "numQuestions",
                          "value": "10"
                        }
                      ],
                      "variable": [
                        {
                          "key": "skillName",
                          "value": "Java"
                        }
                      ]
                    },
                    "description": "Generate and save interview questions for all topics of a skill using Gemini. Loops through all topics and uses the same logic as the single-topic endpoint."
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"skill_name\": \"Java\",\n  \"results\": [\n    {\"topic_name\": \"Collections\", \"questions_added\": 10, \"questions\": [...]},\n    {\"topic_name\": \"Multithreading\", \"questions_added\": 8, \"questions\": [...]}\n  ],\n  \"message\": \"Questions generated and (optionally) saved for all topics\"\n}"
                    },
                    {
                      "code": 404,
                      "name": "Skill not found",
                      "body": "{\n  \"error\": \"Skill not found: Java\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                },
                {
                  "name": "POST /api/v1/ai/skills/topics/questions/generate-and-save-all",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/skills/topics/questions/generate-and-save-all?numQuestions=10",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "skills",
                        "topics",
                        "questions",
                        "generate-and-save-all"
                      ],
                      "query": [
                        {
                          "key": "numQuestions",
                          "value": "10"
                        }
                      ]
                    },
                    "description": "Generate and save interview questions for all enabled skills and all their topics using Gemini. Loops through all skills and topics and uses the same logic as the single-skill endpoint."
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"total_skills\": 15,\n  \"results\": [\n    {\"skill_name\": \"Java\", \"topics_processed\": 8, \"total_questions_added\": 80, \"message\": \"Questions generated and saved for all topics\"},\n    {\"skill_name\": \"Python\", \"topics_processed\": 10, \"total_questions_added\": 100, \"message\": \"Questions generated and saved for all topics\"}\n  ],\n  \"message\": \"Questions generated and saved for all skills and topics\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Server Error\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Designation Management",
              "description": "AI-powered designation similarity generation and management",
              "item": [
                {
                  "name": "POST /api/v1/ai/designations/generate-similar",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/v1/ai/designations/generate-similar",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "v1",
                        "ai",
                        "designations",
                        "generate-similar"
                      ]
                    },
                    "description": "Generate similar designations for all unprocessed designations. Loops through all designations that haven't been processed for similar designation generation, uses AI to find similar designations that a person can switch to, creates new designations if they don't exist, and stores the results in the designation table."
                  },
                  "response": [
                    {
                      "code": 200,
                      "name": "Success",
                      "body": "{\n  \"total_designations_processed\": 50,\n  \"total_similar_designations_found\": 400,\n  \"total_new_designations_created\": 25,\n  \"total_errors\": 2,\n  \"designation_results\": [\n    {\n      \"designationId\": 1,\n      \"designationName\": \"Software Engineer\",\n      \"success\": true,\n      \"similarDesignationsFound\": 8,\n      \"newDesignationsCreated\": 2,\n      \"similarDesignationNames\": [\"Full Stack Engineer\", \"Backend Engineer\", \"DevOps Engineer\"],\n      \"newDesignationNames\": [\"Platform Engineer\", \"Cloud Engineer\"],\n      \"existingDesignationNames\": [\"Full Stack Engineer\", \"Backend Engineer\", \"DevOps Engineer\"]\n    }\n  ],\n  \"message\": \"Similar designation generation completed\"\n}"
                    },
                    {
                      "code": 500,
                      "name": "Server Error",
                      "body": "{\n  \"error\": \"Error generating similar designations: Server Error\"\n}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "AIController",
          "description": "APIs for AI-powered data generation and enrichment utilities",
          "item": [
            {
              "name": "Generate Companies Batch",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/generate-batch",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "generate-batch"
                  ]
                },
                "description": "Generate and save companies industry-wise using Gemini"
              },
              "response": []
            },
            {
              "name": "Crawl All Companies",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/crawl",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "crawl"
                  ]
                },
                "description": "Crawl all companies from the companies.txt file"
              },
              "response": []
            },
            {
              "name": "Crawl Jobs for Company by ID",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/1/jobs/crawl",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "1",
                    "jobs",
                    "crawl"
                  ],
                  "variable": [
                    {
                      "key": "companyId",
                      "value": "1",
                      "description": "Company ID"
                    }
                  ]
                },
                "description": "Crawl jobs for a specific company by ID"
              },
              "response": []
            },
            {
              "name": "Crawl Jobs for Company by Name",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/Google/jobs/crawl-by-name",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "Google",
                    "jobs",
                    "crawl-by-name"
                  ],
                  "variable": [
                    {
                      "key": "companyName",
                      "value": "Google",
                      "description": "Company name"
                    }
                  ]
                },
                "description": "Crawl jobs for a company by name"
              },
              "response": []
            },
            {
              "name": "Detect Industries for Companies",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/detect-industries",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "detect-industries"
                  ]
                },
                "description": "Detect industries for all unprocessed companies"
              },
              "response": []
            },
            {
              "name": "Reset Industry Processed Flag",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/detect-industries/reset",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "detect-industries",
                    "reset"
                  ]
                },
                "description": "Reset industry processed flag for all companies"
              },
              "response": []
            },
            {
              "name": "Shorten Company Content by ID",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/1/shorten-content",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "1",
                    "shorten-content"
                  ],
                  "variable": [
                    {
                      "key": "companyId",
                      "value": "1",
                      "description": "Company ID"
                    }
                  ]
                },
                "description": "Shorten company about us and culture content using AI"
              },
              "response": []
            },
            {
              "name": "Shorten All Companies Content",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/shorten-content-all",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "shorten-content-all"
                  ]
                },
                "description": "Shorten about us and culture content for all unprocessed companies"
              },
              "response": []
            },
            {
              "name": "Generate Comprehensive Interview Questions",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/interview-questions/generate-comprehensive",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "interview-questions",
                    "generate-comprehensive"
                  ]
                },
                "description": "Generate comprehensive interview questions for all skills"
              },
              "response": []
            },
            {
              "name": "Generate Interview Questions for Skill",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/interview-questions/generate-for-skill/Java",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "interview-questions",
                    "generate-for-skill",
                    "Java"
                  ],
                  "variable": [
                    {
                      "key": "skillName",
                      "value": "Java",
                      "description": "Skill name"
                    }
                  ]
                },
                "description": "Generate comprehensive interview questions for specific skill"
              },
              "response": []
            },
            {
              "name": "Generate and Save Tech Skills",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/skills/generate-and-save",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "skills",
                    "generate-and-save"
                  ]
                },
                "description": "Generate and save more tech skills using AI"
              },
              "response": []
            },
            {
              "name": "Generate Topics for Skill",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/skills/Java/topics/generate-and-save",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "skills",
                    "Java",
                    "topics",
                    "generate-and-save"
                  ],
                  "variable": [
                    {
                      "key": "skillName",
                      "value": "Java",
                      "description": "Skill name"
                    }
                  ]
                },
                "description": "Generate and save topics for a technical skill"
              },
              "response": []
            },
            {
              "name": "Generate Topics for All Skills",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/skills/topics/generate-and-save-all",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "skills",
                    "topics",
                    "generate-and-save-all"
                  ]
                },
                "description": "Generate and save topics for all technical skills"
              },
              "response": []
            },
            {
              "name": "Generate Questions for Skill and Topic",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/skills/Java/topics/Collections/questions/generate-and-save",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "skills",
                    "Java",
                    "topics",
                    "Collections",
                    "questions",
                    "generate-and-save"
                  ],
                  "variable": [
                    {
                      "key": "skillName",
                      "value": "Java",
                      "description": "Skill name"
                    },
                    {
                      "key": "topicName",
                      "value": "Collections",
                      "description": "Topic name"
                    }
                  ]
                },
                "description": "Generate and save interview questions for a skill and topic"
              },
              "response": []
            },
            {
              "name": "Generate Questions for All Topics of Skill",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/skills/Java/topics/questions/generate-and-save",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "skills",
                    "Java",
                    "topics",
                    "questions",
                    "generate-and-save"
                  ],
                  "variable": [
                    {
                      "key": "skillName",
                      "value": "Java",
                      "description": "Skill name"
                    }
                  ]
                },
                "description": "Generate and save interview questions for all topics of a skill"
              },
              "response": []
            },
            {
              "name": "Generate Questions for All Skills and Topics",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/skills/topics/questions/generate-and-save-all",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "skills",
                    "topics",
                    "questions",
                    "generate-and-save-all"
                  ]
                },
                "description": "Generate and save interview questions for all skills and topics"
              },
              "response": []
            },
            {
              "name": "Generate Similar Designations",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/designations/generate-similar",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "designations",
                    "generate-similar"
                  ]
                },
                "description": "Generate similar designations for all unprocessed designations"
              },
              "response": []
            },
            {
              "name": "Generate Similar Companies",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/generate-similar",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "generate-similar"
                  ]
                },
                "description": "Generate similar companies for all unprocessed companies"
              },
              "response": []
            },
            {
              "name": "Get All URL Content",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/url-content",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "url-content"
                  ]
                },
                "description": "Get all URL content from the database"
              },
              "response": []
            },
            {
              "name": "Get URL Content by URL",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/url-content/https://example.com",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "url-content",
                    "https://example.com"
                  ],
                  "variable": [
                    {
                      "key": "url",
                      "value": "https://example.com",
                      "description": "URL to get content for"
                    }
                  ]
                },
                "description": "Get URL content for a specific URL"
              },
              "response": []
            },
            {
              "name": "Generate Cities for Countries",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/cities/generate-for-countries",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "cities",
                    "generate-for-countries"
                  ]
                },
                "description": "Generate cities for all unprocessed countries using GenAI"
              },
              "response": []
            },
            {
              "name": "Generate Cities for Country",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/cities/generate-for-country/1",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "cities",
                    "generate-for-country",
                    "1"
                  ],
                  "variable": [
                    {
                      "key": "countryId",
                      "value": "1",
                      "description": "Country ID"
                    }
                  ]
                },
                "description": "Generate cities for a specific country using GenAI"
              },
              "response": []
            },
            {
              "name": "Reset Cities Processed Flag",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/cities/reset-processed-flag",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "cities",
                    "reset-processed-flag"
                  ]
                },
                "description": "Reset cities processed flag for all countries"
              },
              "response": []
            },
            {
              "name": "Generate Processed Names for All Entities",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/processed-names/generate-all",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "processed-names",
                    "generate-all"
                  ]
                },
                "description": "Generate processed names for all unprocessed entities"
              },
              "response": []
            },
            {
              "name": "Generate Processed Names for Countries",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/processed-names/generate-countries",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "processed-names",
                    "generate-countries"
                  ]
                },
                "description": "Generate processed names for unprocessed countries"
              },
              "response": []
            },
            {
              "name": "Generate Processed Names for Cities",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/processed-names/generate-cities",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "processed-names",
                    "generate-cities"
                  ]
                },
                "description": "Generate processed names for unprocessed cities"
              },
              "response": []
            },
            {
              "name": "Generate Processed Names for Companies",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/processed-names/generate-companies",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "processed-names",
                    "generate-companies"
                  ]
                },
                "description": "Generate processed names for unprocessed companies"
              },
              "response": []
            },
            {
              "name": "Generate Processed Names for Designations",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/processed-names/generate-designations",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "processed-names",
                    "generate-designations"
                  ]
                },
                "description": "Generate processed names for unprocessed designations"
              },
              "response": []
            },
            {
              "name": "Reset Processed Name Generation Flag",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/processed-names/reset",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "processed-names",
                    "reset"
                  ]
                },
                "description": "Reset processed name generation flag for all entities"
              },
              "response": []
            },
            {
              "name": "Generate Designations for All Departments",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/designations/generate-for-departments",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "designations",
                    "generate-for-departments"
                  ]
                },
                "description": "Generate designations for all departments using GenAI"
              },
              "response": []
            },
            {
              "name": "Generate Designations for Department",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/designations/generate-for-department/1",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "designations",
                    "generate-for-department",
                    "1"
                  ],
                  "variable": [
                    {
                      "key": "departmentId",
                      "value": "1",
                      "description": "Department ID"
                    }
                  ]
                },
                "description": "Generate designations for a specific department using GenAI"
              },
              "response": []
            },
            {
              "name": "Generate Shortnames for All Companies",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/shortnames/generate-for-all",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "shortnames",
                    "generate-for-all"
                  ]
                },
                "description": "Generate shortnames for all companies using GenAI"
              },
              "response": []
            },
            {
              "name": "Generate Shortname for Specific Company",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/shortnames/generate-for-company/Eternal",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "shortnames",
                    "generate-for-company",
                    "Eternal"
                  ],
                  "variable": [
                    {
                      "key": "companyName",
                      "value": "Eternal",
                      "description": "Company name"
                    }
                  ]
                },
                "description": "Generate shortname for specific company using GenAI"
              },
              "response": []
            },
            {
              "name": "Process All Secondary Industries",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/secondary-industries/map-all",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "secondary-industries",
                    "map-all"
                  ]
                },
                "description": "Process and map all secondary industries using GenAI"
              },
              "response": []
            },
            {
              "name": "Process Single Secondary Industry",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/secondary-industries/map-industry/Fortune 500",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "secondary-industries",
                    "map-industry",
                    "Fortune 500"
                  ],
                  "variable": [
                    {
                      "key": "industryName",
                      "value": "Fortune 500",
                      "description": "Secondary industry name"
                    }
                  ]
                },
                "description": "Process and map a specific secondary industry using GenAI"
              },
              "response": []
            },
            {
              "name": "Reset Secondary Industry Processed Flag",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/secondary-industries/reset-processed-flag",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "secondary-industries",
                    "reset-processed-flag"
                  ]
                },
                "description": "Reset processed flag for all secondary industry mappings"
              },
              "response": []
            },
            {
              "name": "Process All Companies for Cleanup",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/cleanup-all",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "cleanup-all"
                  ]
                },
                "description": "Process all unprocessed companies to identify and clean up junk/product entries using GenAI"
              },
              "response": []
            },
            {
              "name": "Process Specific Company for Cleanup",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/cleanup/AWS",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "cleanup",
                    "AWS"
                  ],
                  "variable": [
                    {
                      "key": "companyName",
                      "value": "AWS",
                      "description": "Company name to process for cleanup"
                    }
                  ]
                },
                "description": "Process a specific company to identify if it's a junk/product entry and clean it up using GenAI"
              },
              "response": []
            },
            {
              "name": "Reset Company Cleanup Processed Flag",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/cleanup/reset-processed-flag",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "cleanup",
                    "reset-processed-flag"
                  ]
                },
                "description": "Reset the cleanup processed flag for all companies to allow reprocessing"
              },
              "response": []
            },
            {
              "name": "Process All Companies for Cleanup",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/cleanup-all",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "cleanup-all"
                  ]
                },
                "description": "Process all unprocessed companies to identify and mark junk/product entries using GenAI (no deletion - only flagging)"
              },
              "response": []
            },
            {
              "name": "Process Specific Company for Cleanup",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/cleanup/AWS",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "cleanup",
                    "AWS"
                  ],
                  "variable": [
                    {
                      "key": "companyName",
                      "value": "AWS",
                      "description": "Company name to process for cleanup"
                    }
                  ]
                },
                "description": "Process a specific company to identify if it's a junk/product entry and mark it accordingly using GenAI"
              },
              "response": []
            },
            {
              "name": "Get All Junk-Marked Companies",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/cleanup/junk-marked",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "cleanup",
                    "junk-marked"
                  ]
                },
                "description": "Retrieve all companies marked as junk for manual review before deletion"
              },
              "response": []
            },
            {
              "name": "Clear Junk Flag for Company",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/cleanup/clear-junk-flag/1",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "cleanup",
                    "clear-junk-flag",
                    "1"
                  ],
                  "variable": [
                    {
                      "key": "companyId",
                      "value": "1",
                      "description": "Company ID to clear junk flag"
                    }
                  ]
                },
                "description": "Remove junk flag from a specific company, effectively undoing the junk marking"
              },
              "response": []
            },
            {
              "name": "Reset Company Cleanup Processed Flag",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/ai/companies/cleanup/reset-processed-flag",
                  "host": [
                    "{{base_url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "ai",
                    "companies",
                    "cleanup",
                    "reset-processed-flag"
                  ]
                },
                "description": "Reset the cleanup processed flag for all companies to allow reprocessing"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Interview Preparation",
      "description": "Endpoints for interview preparation",
      "item": [
        {
          "name": "InterviewGenerationController",
          "description": "APIs for AI-powered interview content generation",
          "item": [
            {
              "name": "GET /api/v1/interview-generation/questions/generation/queue/{queueId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-generation/questions/generation/queue/{queueId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-generation",
                    "questions",
                    "generation",
                    "queue",
                    "{queueId}"
                  ],
                  "variable": [
                    {
                      "key": "queueId",
                      "value": "{{queueId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewGenerationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-generation/questions/generation/queue/pending",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-generation/questions/generation/queue/pending",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-generation",
                    "questions",
                    "generation",
                    "queue",
                    "pending"
                  ]
                },
                "description": "Auto-generated endpoint from InterviewGenerationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-generation/questions/generation/queue/in-progress",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-generation/questions/generation/queue/in-progress",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-generation",
                    "questions",
                    "generation",
                    "queue",
                    "in-progress"
                  ]
                },
                "description": "Auto-generated endpoint from InterviewGenerationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/interview-generation/designations/{designation}/topics/generate",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-generation/designations/{designation}/topics/generate",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-generation",
                    "designations",
                    "{designation}",
                    "topics",
                    "generate"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewGenerationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/interview-generation/designations/{designation}/topics/generate-and-save",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-generation/designations/{designation}/topics/generate-and-save",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-generation",
                    "designations",
                    "{designation}",
                    "topics",
                    "generate-and-save"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewGenerationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/interview-generation/designations/topics/generate-all",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-generation/designations/topics/generate-all",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-generation",
                    "designations",
                    "topics",
                    "generate-all"
                  ]
                },
                "description": "Auto-generated endpoint from InterviewGenerationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/interview-generation/designations/topics/generate-and-save-all",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-generation/designations/topics/generate-and-save-all",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-generation",
                    "designations",
                    "topics",
                    "generate-and-save-all"
                  ]
                },
                "description": "Auto-generated endpoint from InterviewGenerationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "POST /api/v1/interview-generation/questions/generate",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-generation/questions/generate",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-generation",
                    "questions",
                    "generate"
                  ]
                },
                "description": "Auto-generated endpoint from InterviewGenerationController",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"example\": \"data\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "InterviewPreparationController",
          "description": "APIs for interview preparation content management",
          "item": [
            {
              "name": "GET /api/v1/interview-prep/designations",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations"
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/designations/database",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations/database",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations",
                    "database"
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/designations/{designation}/topics",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations/{designation}/topics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations",
                    "{designation}",
                    "topics"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/designations/{designation}/topics/filter",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations/{designation}/topics/filter",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations",
                    "{designation}",
                    "topics",
                    "filter"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/designations/{designation}/categories",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations/{designation}/categories",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations",
                    "{designation}",
                    "categories"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/designations/{designation}/questions/general",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations/{designation}/questions/general",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations",
                    "{designation}",
                    "questions",
                    "general"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/designations/{designation}/topics/{topicName}/questions/general",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations/{designation}/topics/{topicName}/questions/general",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations",
                    "{designation}",
                    "topics",
                    "{topicName}",
                    "questions",
                    "general"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    },
                    {
                      "key": "topicName",
                      "value": "{{topicName}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/designations/{designation}/topics/{topicName}/questions/general/paginated",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations/{designation}/topics/{topicName}/questions/general/paginated",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations",
                    "{designation}",
                    "topics",
                    "{topicName}",
                    "questions",
                    "general",
                    "paginated"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    },
                    {
                      "key": "topicName",
                      "value": "{{topicName}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/designations/{designation}/topics-with-questions/general",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations/{designation}/topics-with-questions/general",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations",
                    "{designation}",
                    "topics-with-questions",
                    "general"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/companies/{companyName}/designations/{designation}/questions",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/companies/{companyName}/designations/{designation}/questions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "companies",
                    "{companyName}",
                    "designations",
                    "{designation}",
                    "questions"
                  ],
                  "variable": [
                    {
                      "key": "companyName",
                      "value": "{{companyName}}"
                    },
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/companies/{companyName}/designations/{designation}/topics/{topicName}/questions",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/companies/{companyName}/designations/{designation}/topics/{topicName}/questions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "companies",
                    "{companyName}",
                    "designations",
                    "{designation}",
                    "topics",
                    "{topicName}",
                    "questions"
                  ],
                  "variable": [
                    {
                      "key": "companyName",
                      "value": "{{companyName}}"
                    },
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    },
                    {
                      "key": "topicName",
                      "value": "{{topicName}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/companies/{companyName}/designations/{designation}/topics/{topicName}/questions/paginated",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/companies/{companyName}/designations/{designation}/topics/{topicName}/questions/paginated",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "companies",
                    "{companyName}",
                    "designations",
                    "{designation}",
                    "topics",
                    "{topicName}",
                    "questions",
                    "paginated"
                  ],
                  "variable": [
                    {
                      "key": "companyName",
                      "value": "{{companyName}}"
                    },
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    },
                    {
                      "key": "topicName",
                      "value": "{{topicName}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/designations/{designation}/companies-with-questions",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations/{designation}/companies-with-questions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations",
                    "{designation}",
                    "companies-with-questions"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/companies/{companyName}/designations/{designation}/topics-with-questions",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/companies/{companyName}/designations/{designation}/topics-with-questions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "companies",
                    "{companyName}",
                    "designations",
                    "{designation}",
                    "topics-with-questions"
                  ],
                  "variable": [
                    {
                      "key": "companyName",
                      "value": "{{companyName}}"
                    },
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/interview-prep/designations/{designation}/statistics",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/interview-prep/designations/{designation}/statistics",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "interview-prep",
                    "designations",
                    "{designation}",
                    "statistics"
                  ],
                  "variable": [
                    {
                      "key": "designation",
                      "value": "{{designation}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from InterviewPreparationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Location",
      "description": "Endpoints for location",
      "item": [
        {
          "name": "LocationController",
          "description": "APIs for managing geographical locations",
          "item": [
            {
              "name": "GET /api/v1/locations/countries",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/locations/countries",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "locations",
                    "countries"
                  ]
                },
                "description": "Auto-generated endpoint from LocationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/locations/countries/{countryId}/cities",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/locations/countries/{countryId}/cities",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "locations",
                    "countries",
                    "{countryId}",
                    "cities"
                  ],
                  "variable": [
                    {
                      "key": "countryId",
                      "value": "{{countryId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from LocationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/locations/cities",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/locations/cities",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "locations",
                    "cities"
                  ]
                },
                "description": "Auto-generated endpoint from LocationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/locations/cities/{cityId}",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/locations/cities/{cityId}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "locations",
                    "cities",
                    "{cityId}"
                  ],
                  "variable": [
                    {
                      "key": "cityId",
                      "value": "{{cityId}}"
                    }
                  ]
                },
                "description": "Auto-generated endpoint from LocationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            },
            {
              "name": "GET /api/v1/locations/cities/search",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/locations/cities/search",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "locations",
                    "cities",
                    "search"
                  ]
                },
                "description": "Auto-generated endpoint from LocationController"
              },
              "response": [
                {
                  "code": 200,
                  "name": "Success",
                  "body": "{\n  \"message\": \"Success\"\n}"
                },
                {
                  "code": 400,
                  "name": "Bad Request",
                  "body": "{\n  \"error\": \"Bad Request\"\n}"
                },
                {
                  "code": 401,
                  "name": "Unauthorized",
                  "body": "{\n  \"error\": \"Unauthorized\"\n}"
                },
                {
                  "code": 404,
                  "name": "Not Found",
                  "body": "{\n  \"error\": \"Not Found\"\n}"
                },
                {
                  "code": 500,
                  "name": "Server Error",
                  "body": "{\n  \"error\": \"Server Error\"\n}"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}